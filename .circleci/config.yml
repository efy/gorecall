# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  test_frontend:
    docker:
      - image: circleci/node:8.11-stretch
    working_directory: ~/gorecall
    steps:
      - checkout
      - run:
          name: Fetch frontend dependencies
          command: cd client && yarn install
      - run:
          name: Run frontend unit tests
          environment:
            CI: true
          command: cd client && yarn test

  test_api:
    docker:
      # specify the version
      - image: circleci/golang:1.9.2
      - image: circleci/postgres:9.4.12-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/efy/gorecall
    steps:
      - checkout

      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1

      - run:
          name: Fetch go dependencies
          command: go get -v -t -d ./...

      - run:
          name: Run go unit tests
          environment:
            TEST_DSN: "postgres://root@localhost:5432/circle_test?sslmode=disable"
          command: go test -v ./...
workflows:
  version: 2
  test:
    jobs:
      - test_frontend
      - test_api
